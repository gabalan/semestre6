%{
#include <string.h>
#include <stdint.h>
#include "emulator.tab.h"
%}

%s COMMENT
%option noyywrap
%option yylineno

DecimalInteger		[0-9]+
HexadecimalInteger	0x[0-9A-F]+
Register		R[0-9]+
Spaces			[ \t]+

%%

<INITIAL>{
	":="		return TOKEN_AFF;
	if		return TOKEN_IF;
	skip		return TOKEN_SKIP;
	goto		return TOKEN_GOTO;
	push		return TOKEN_PUSH;
	print		return TOKEN_PRINT;
	println		return TOKEN_PRINTLN;
	param		return TOKEN_PARAM;
	call		return TOKEN_CALL;
	return		return TOKEN_RETURN;
	malloc		return TOKEN_MALLOC;
	free		return TOKEN_FREE;
	read		return TOKEN_READ;
	stop		return TOKEN_STOP;
	STATIC		return TOKEN_STATIC;
	STACK		return TOKEN_STACK;
	HEAP		return TOKEN_HEAP;
	"+"		return TOKEN_PLUS;
	"-"		return TOKEN_MINUS;
	"*"		return TOKEN_TIMES;
	"/"		return TOKEN_DIV;
	"&&"		return TOKEN_AND;
	"||"		return TOKEN_OR;
	"!"		return TOKEN_NOT;
	"<"		return TOKEN_LT;
	"<="		return TOKEN_LE;
	">"		return TOKEN_GT;
	">="		return TOKEN_GE;
	"="		return TOKEN_EQ;
	"!="		return TOKEN_NE;
	{DecimalInteger}	{sscanf(yytext, "%d", &yylval.intval); return INTEGER;}
	{HexadecimalInteger}	{sscanf(yytext+2, "%X", &yylval.intval); return INTEGER;}
	{Register}	{sscanf(yytext+1, "%d", &yylval.intval); return REGISTER;}
	\/\* 		BEGIN(COMMENT);
	\/\/.*\n	;
	{Spaces}	;
	.|\n		return yytext[0];

}

<COMMENT>{
	\*\/	BEGIN(INITIAL);
	.|\n	;
}
%%
